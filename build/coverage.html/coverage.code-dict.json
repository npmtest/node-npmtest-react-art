{"/home/travis/build/npmtest/node-npmtest-react-art/test.js":"/* istanbul instrument in package npmtest_react_art */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-react-art/lib.npmtest_react_art.js":"/* istanbul instrument in package npmtest_react_art */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_react_art = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_react_art = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-react-art/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-react-art && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_react_art */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_react_art\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_react_art.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_react_art.rollup.js'] =\n            local.assetsDict['/assets.npmtest_react_art.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_react_art.__dirname + '/lib.npmtest_react_art.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-react-art/node_modules/react-art/lib/ReactART.js":"/**\n * Copyright (c) 2013-present Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactART\n */\n\n'use strict';\n\nrequire('art/modes/current').setCurrent(require('art/modes/fast-noSideEffects') // Flip this to DOM mode for debugging\n);\n\nvar Transform = require('art/core/transform');\nvar Mode = require('art/modes/current');\n\nvar React = require('react');\nvar ReactDOM = require('react-dom');\nvar ReactInstanceMap = require('react/lib/ReactInstanceMap');\nvar ReactMultiChild = require('react/lib/ReactMultiChild');\nvar ReactUpdates = require('react/lib/ReactUpdates');\n\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar invariant = require('fbjs/lib/invariant');\n\nvar assign = require('object-assign');\nvar pooledTransform = new Transform();\n\n// Utilities\n\nfunction childrenAsString(children) {\n  if (!children) {\n    return '';\n  }\n  if (typeof children === 'string') {\n    return children;\n  }\n  if (children.length) {\n    return children.join('\\n');\n  }\n  return '';\n}\n\nfunction createComponent(name) {\n  var ReactARTComponent = function ReactARTComponent(element) {\n    this.node = null;\n    this.subscriptions = null;\n    this.listeners = null;\n    this._mountImage = null;\n    this._renderedChildren = null;\n    this.construct(element);\n  };\n  ReactARTComponent.displayName = name;\n  for (var i = 1, l = arguments.length; i < l; i++) {\n    assign(ReactARTComponent.prototype, arguments[i]);\n  }\n\n  return ReactARTComponent;\n}\n\n/**\n * Insert `node` into `parentNode` after `referenceNode`.\n */\nfunction injectAfter(parentNode, referenceNode, node) {\n  var beforeNode = void 0;\n  if (node.parentNode === parentNode && node.previousSibling === referenceNode) {\n    return;\n  }\n  if (referenceNode == null) {\n    // node is supposed to be first.\n    beforeNode = parentNode.firstChild;\n  } else {\n    // node is supposed to be after referenceNode.\n    beforeNode = referenceNode.nextSibling;\n  }\n  if (beforeNode && beforeNode.previousSibling !== node) {\n    // Cases where `node === beforeNode` should get filtered out by earlier\n    // checks and the behavior isn't well-defined.\n    invariant(node !== beforeNode, 'ReactART: Can not insert node before itself');\n    node.injectBefore(beforeNode);\n  } else if (node.parentNode !== parentNode) {\n    node.inject(parentNode);\n  }\n}\n\n// ContainerMixin for components that can hold ART nodes\n\nvar ContainerMixin = assign({}, ReactMultiChild.Mixin, {\n\n  /**\n   * Moves a child component to the supplied index.\n   *\n   * @param {ReactComponent} child Component to move.\n   * @param {number} toIndex Destination index of the element.\n   * @protected\n   */\n  moveChild: function moveChild(child, afterNode, toIndex, lastIndex) {\n    var childNode = child._mountImage;\n    injectAfter(this.node, afterNode, childNode);\n  },\n\n  /**\n   * Creates a child component.\n   *\n   * @param {ReactComponent} child Component to create.\n   * @param {object} childNode ART node to insert.\n   * @protected\n   */\n  createChild: function createChild(child, afterNode, childNode) {\n    child._mountImage = childNode;\n    injectAfter(this.node, afterNode, childNode);\n  },\n\n  /**\n   * Removes a child component.\n   *\n   * @param {ReactComponent} child Child to remove.\n   * @protected\n   */\n  removeChild: function removeChild(child) {\n    child._mountImage.eject();\n    child._mountImage = null;\n  },\n\n  updateChildrenAtRoot: function updateChildrenAtRoot(nextChildren, transaction) {\n    this.updateChildren(nextChildren, transaction, emptyObject);\n  },\n\n  mountAndInjectChildrenAtRoot: function mountAndInjectChildrenAtRoot(children, transaction) {\n    this.mountAndInjectChildren(children, transaction, emptyObject);\n  },\n\n  /**\n   * Override to bypass batch updating because it is not necessary.\n   *\n   * @param {?object} nextChildren.\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   * @override {ReactMultiChild.Mixin.updateChildren}\n   */\n  updateChildren: function updateChildren(nextChildren, transaction, context) {\n    this._updateChildren(nextChildren, transaction, context);\n  },\n\n  // Shorthands\n\n  mountAndInjectChildren: function mountAndInjectChildren(children, transaction, context) {\n    var mountedImages = this.mountChildren(children, transaction, context);\n    // Each mount image corresponds to one of the flattened children\n    var i = 0;\n    for (var key in this._renderedChildren) {\n      if (this._renderedChildren.hasOwnProperty(key)) {\n        var child = this._renderedChildren[key];\n        child._mountImage = mountedImages[i];\n        mountedImages[i].inject(this.node);\n        i++;\n      }\n    }\n  }\n\n});\n\n// Surface is a React DOM Component, not an ART component. It serves as the\n// entry point into the ART reconciler.\n\nvar Surface = React.createClass({\n\n  displayName: 'Surface',\n\n  mixins: [ContainerMixin],\n\n  componentDidMount: function componentDidMount() {\n    var domNode = ReactDOM.findDOMNode(this);\n\n    this.node = Mode.Surface(+this.props.width, +this.props.height, domNode);\n\n    var transaction = ReactUpdates.ReactReconcileTransaction.getPooled();\n    transaction.perform(this.mountAndInjectChildren, this, this.props.children, transaction, ReactInstanceMap.get(this)._context);\n    ReactUpdates.ReactReconcileTransaction.release(transaction);\n  },\n\n  componentDidUpdate: function componentDidUpdate(oldProps) {\n    var node = this.node;\n    if (this.props.width != oldProps.width || this.props.height != oldProps.height) {\n      node.resize(+this.props.width, +this.props.height);\n    }\n\n    var transaction = ReactUpdates.ReactReconcileTransaction.getPooled();\n    transaction.perform(this.updateChildren, this, this.props.children, transaction, ReactInstanceMap.get(this)._context);\n    ReactUpdates.ReactReconcileTransaction.release(transaction);\n\n    if (node.render) {\n      node.render();\n    }\n  },\n\n  componentWillUnmount: function componentWillUnmount() {\n    this.unmountChildren();\n  },\n\n  render: function render() {\n    // This is going to be a placeholder because we don't know what it will\n    // actually resolve to because ART may render canvas, vml or svg tags here.\n    // We only allow a subset of properties since others might conflict with\n    // ART's properties.\n    var props = this.props;\n\n    // TODO: ART's Canvas Mode overrides surface title and cursor\n    var Tag = Mode.Surface.tagName;\n    return React.createElement(Tag, {\n      accessKey: props.accessKey,\n      className: props.className,\n      draggable: props.draggable,\n      role: props.role,\n      style: props.style,\n      tabIndex: props.tabIndex,\n      title: props.title\n    });\n  }\n\n});\n\n// Various nodes that can go into a surface\n\nvar EventTypes = {\n  onMouseMove: 'mousemove',\n  onMouseOver: 'mouseover',\n  onMouseOut: 'mouseout',\n  onMouseUp: 'mouseup',\n  onMouseDown: 'mousedown',\n  onClick: 'click'\n};\n\nvar NodeMixin = {\n\n  construct: function construct(element) {\n    this._currentElement = element;\n  },\n\n  getNativeNode: function getNativeNode() {\n    return this.node;\n  },\n\n  getPublicInstance: function getPublicInstance() {\n    return this.node;\n  },\n\n  putEventListener: function putEventListener(type, listener) {\n    var subscriptions = this.subscriptions || (this.subscriptions = {});\n    var listeners = this.listeners || (this.listeners = {});\n    listeners[type] = listener;\n    if (listener) {\n      if (!subscriptions[type]) {\n        subscriptions[type] = this.node.subscribe(type, listener, this);\n      }\n    } else {\n      if (subscriptions[type]) {\n        subscriptions[type]();\n        delete subscriptions[type];\n      }\n    }\n  },\n\n  handleEvent: function handleEvent(event) {\n    var listener = this.listeners[event.type];\n    if (!listener) {\n      return;\n    }\n    if (typeof listener === 'function') {\n      listener.call(this, event);\n    } else if (listener.handleEvent) {\n      listener.handleEvent(event);\n    }\n  },\n\n  destroyEventListeners: function destroyEventListeners() {\n    var subscriptions = this.subscriptions;\n    if (subscriptions) {\n      for (var type in subscriptions) {\n        subscriptions[type]();\n      }\n    }\n    this.subscriptions = null;\n    this.listeners = null;\n  },\n\n  applyNodeProps: function applyNodeProps(oldProps, props) {\n    var node = this.node;\n\n    var scaleX = props.scaleX != null ? props.scaleX : props.scale != null ? props.scale : 1;\n    var scaleY = props.scaleY != null ? props.scaleY : props.scale != null ? props.scale : 1;\n\n    pooledTransform.transformTo(1, 0, 0, 1, 0, 0).move(props.x || 0, props.y || 0).rotate(props.rotation || 0, props.originX, props.originY).scale(scaleX, scaleY, props.originX, props.originY);\n\n    if (props.transform != null) {\n      pooledTransform.transform(props.transform);\n    }\n\n    if (node.xx !== pooledTransform.xx || node.yx !== pooledTransform.yx || node.xy !== pooledTransform.xy || node.yy !== pooledTransform.yy || node.x !== pooledTransform.x || node.y !== pooledTransform.y) {\n      node.transformTo(pooledTransform);\n    }\n\n    if (props.cursor !== oldProps.cursor || props.title !== oldProps.title) {\n      node.indicate(props.cursor, props.title);\n    }\n\n    if (node.blend && props.opacity !== oldProps.opacity) {\n      node.blend(props.opacity == null ? 1 : props.opacity);\n    }\n\n    if (props.visible !== oldProps.visible) {\n      if (props.visible == null || props.visible) {\n        node.show();\n      } else {\n        node.hide();\n      }\n    }\n\n    for (var type in EventTypes) {\n      this.putEventListener(EventTypes[type], props[type]);\n    }\n  },\n\n  mountComponentIntoNode: function mountComponentIntoNode(rootID, container) {\n    throw new Error('You cannot render an ART component standalone. ' + 'You need to wrap it in a Surface.');\n  }\n\n};\n\n// Group\n\nvar Group = createComponent('Group', NodeMixin, ContainerMixin, {\n\n  mountComponent: function mountComponent(transaction, nativeParent, nativeContainerInfo, context) {\n    this.node = Mode.Group();\n    var props = this._currentElement.props;\n    this.applyGroupProps(emptyObject, props);\n    this.mountAndInjectChildren(props.children, transaction, context);\n    return this.node;\n  },\n\n  receiveComponent: function receiveComponent(nextComponent, transaction, context) {\n    var props = nextComponent.props;\n    var oldProps = this._currentElement.props;\n    this.applyGroupProps(oldProps, props);\n    this.updateChildren(props.children, transaction, context);\n    this._currentElement = nextComponent;\n  },\n\n  applyGroupProps: function applyGroupProps(oldProps, props) {\n    this.node.width = props.width;\n    this.node.height = props.height;\n    this.applyNodeProps(oldProps, props);\n  },\n\n  unmountComponent: function unmountComponent() {\n    this.destroyEventListeners();\n    this.unmountChildren();\n  }\n\n});\n\n// ClippingRectangle\nvar ClippingRectangle = createComponent('ClippingRectangle', NodeMixin, ContainerMixin, {\n\n  mountComponent: function mountComponent(transaction, nativeParent, nativeContainerInfo, context) {\n    this.node = Mode.ClippingRectangle();\n    var props = this._currentElement.props;\n    this.applyClippingProps(emptyObject, props);\n    this.mountAndInjectChildren(props.children, transaction, context);\n    return this.node;\n  },\n\n  receiveComponent: function receiveComponent(nextComponent, transaction, context) {\n    var props = nextComponent.props;\n    var oldProps = this._currentElement.props;\n    this.applyClippingProps(oldProps, props);\n    this.updateChildren(props.children, transaction, context);\n    this._currentElement = nextComponent;\n  },\n\n  applyClippingProps: function applyClippingProps(oldProps, props) {\n    this.node.width = props.width;\n    this.node.height = props.height;\n    this.node.x = props.x;\n    this.node.y = props.y;\n    this.applyNodeProps(oldProps, props);\n  },\n\n  unmountComponent: function unmountComponent() {\n    this.destroyEventListeners();\n    this.unmountChildren();\n  }\n\n});\n\n// Renderables\n\nvar RenderableMixin = assign({}, NodeMixin, {\n\n  applyRenderableProps: function applyRenderableProps(oldProps, props) {\n    if (oldProps.fill !== props.fill) {\n      if (props.fill && props.fill.applyFill) {\n        props.fill.applyFill(this.node);\n      } else {\n        this.node.fill(props.fill);\n      }\n    }\n    if (oldProps.stroke !== props.stroke || oldProps.strokeWidth !== props.strokeWidth || oldProps.strokeCap !== props.strokeCap || oldProps.strokeJoin !== props.strokeJoin ||\n    // TODO: Consider a deep check of stokeDash.\n    // This may benefit the VML version in IE.\n    oldProps.strokeDash !== props.strokeDash) {\n      this.node.stroke(props.stroke, props.strokeWidth, props.strokeCap, props.strokeJoin, props.strokeDash);\n    }\n    this.applyNodeProps(oldProps, props);\n  },\n\n  unmountComponent: function unmountComponent() {\n    this.destroyEventListeners();\n  }\n\n});\n\n// Shape\n\nvar Shape = createComponent('Shape', RenderableMixin, {\n\n  construct: function construct(element) {\n    this._currentElement = element;\n    this._oldDelta = null;\n    this._oldPath = null;\n  },\n\n  mountComponent: function mountComponent(transaction, nativeParent, nativeContainerInfo, context) {\n    this.node = Mode.Shape();\n    var props = this._currentElement.props;\n    this.applyShapeProps(emptyObject, props);\n    return this.node;\n  },\n\n  receiveComponent: function receiveComponent(nextComponent, transaction, context) {\n    var props = nextComponent.props;\n    var oldProps = this._currentElement.props;\n    this.applyShapeProps(oldProps, props);\n    this._currentElement = nextComponent;\n  },\n\n  applyShapeProps: function applyShapeProps(oldProps, props) {\n    var oldDelta = this._oldDelta;\n    var oldPath = this._oldPath;\n    var path = props.d || childrenAsString(props.children);\n\n    if (path.delta !== oldDelta || path !== oldPath || oldProps.width !== props.width || oldProps.height !== props.height) {\n\n      this.node.draw(path, props.width, props.height);\n\n      this._oldPath = path;\n      this._oldDelta = path.delta;\n    }\n\n    this.applyRenderableProps(oldProps, props);\n  }\n\n});\n\n// Text\n\nvar Text = createComponent('Text', RenderableMixin, {\n\n  construct: function construct(element) {\n    this._currentElement = element;\n    this._oldString = null;\n  },\n\n  mountComponent: function mountComponent(transaction, nativeParent, nativeContainerInfo, context) {\n    var props = this._currentElement.props;\n    var newString = childrenAsString(props.children);\n    this.node = Mode.Text(newString, props.font, props.alignment, props.path);\n    this._oldString = newString;\n    this.applyRenderableProps(emptyObject, props);\n    return this.node;\n  },\n\n  isSameFont: function isSameFont(oldFont, newFont) {\n    if (oldFont === newFont) {\n      return true;\n    }\n    if (typeof newFont === 'string' || typeof oldFont === 'string') {\n      return false;\n    }\n    return newFont.fontSize === oldFont.fontSize && newFont.fontStyle === oldFont.fontStyle && newFont.fontVariant === oldFont.fontVariant && newFont.fontWeight === oldFont.fontWeight && newFont.fontFamily === oldFont.fontFamily;\n  },\n\n  receiveComponent: function receiveComponent(nextComponent, transaction, context) {\n    var props = nextComponent.props;\n    var oldProps = this._currentElement.props;\n\n    var oldString = this._oldString;\n    var newString = childrenAsString(props.children);\n\n    if (oldString !== newString || !this.isSameFont(oldProps.font, props.font) || oldProps.alignment !== props.alignment || oldProps.path !== props.path) {\n      this.node.draw(newString, props.font, props.alignment, props.path);\n      this._oldString = newString;\n    }\n\n    this.applyRenderableProps(oldProps, props);\n    this._currentElement = nextComponent;\n  }\n\n});\n\n// Declarative fill type objects - API design not finalized\n\nvar slice = Array.prototype.slice;\n\nfunction LinearGradient(stops, x1, y1, x2, y2) {\n  this.args = slice.call(arguments);\n}\n\nLinearGradient.prototype.applyFill = function (node) {\n  node.fillLinear.apply(node, this.args);\n};\n\nfunction RadialGradient(stops, fx, fy, rx, ry, cx, cy) {\n  this.args = slice.call(arguments);\n}\n\nRadialGradient.prototype.applyFill = function (node) {\n  node.fillRadial.apply(node, this.args);\n};\n\nfunction Pattern(url, width, height, left, top) {\n  this.args = slice.call(arguments);\n}\n\nPattern.prototype.applyFill = function (node) {\n  node.fillImage.apply(node, this.args);\n};\n\nmodule.exports = {\n  ClippingRectangle: ClippingRectangle,\n  Group: Group,\n  LinearGradient: LinearGradient,\n  Path: Mode.Path,\n  Pattern: Pattern,\n  RadialGradient: RadialGradient,\n  Shape: Shape,\n  Surface: Surface,\n  Text: Text,\n  Transform: Transform\n};","/home/travis/build/npmtest/node-npmtest-react-art/node_modules/react-art/lib/Circle.art.js":"'use strict';\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n/**\n * Copyright (c) 2013-present Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Circle.art\n * @typechecks\n *\n * Example usage:\n * <Circle\n *   radius={10}\n *   stroke=\"green\"\n *   strokeWidth={3}\n *   fill=\"blue\"\n * />\n *\n */\n\nvar React = require('react');\nvar ReactART = require('./ReactART');\n\nvar PropTypes = React.PropTypes;\n\nvar Path = ReactART.Path;\nvar Shape = ReactART.Shape;\n\n/**\n * Circle is a React component for drawing circles. Like other ReactART\n * components, it must be used in a <Surface>.\n */\nvar Circle = React.createClass({\n  displayName: 'Circle',\n\n  propTypes: {\n    radius: PropTypes.number.isRequired\n  },\n\n  render: function render() {\n    var radius = this.props.radius;\n\n    var path = Path().moveTo(0, -radius).arc(0, radius * 2, radius).arc(0, radius * -2, radius).close();\n    return React.createElement(Shape, _extends({}, this.props, { d: path }));\n  }\n});\n\nmodule.exports = Circle;","/home/travis/build/npmtest/node-npmtest-react-art/node_modules/react-art/lib/Rectangle.art.js":"'use strict';\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n/**\n * Copyright (c) 2013-present Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Rectangle.art\n * @typechecks\n *\n * Example usage:\n * <Rectangle\n *   width={50}\n *   height={50}\n *   stroke=\"green\"\n *   fill=\"blue\"\n * />\n *\n * Additional optional properties:\n *   (Number) radius\n *   (Number) radiusTopLeft\n *   (Number) radiusTopRight\n *   (Number) radiusBottomLeft\n *   (Number) radiusBottomRight\n *\n */\n\nvar React = require('react');\nvar ReactART = require('./ReactART');\n\nvar PropTypes = React.PropTypes;\n\nvar Shape = ReactART.Shape;\nvar Path = ReactART.Path;\n\n/**\n * Rectangle is a React component for drawing rectangles. Like other ReactART\n * components, it must be used in a <Surface>.\n */\nvar Rectangle = React.createClass({\n  displayName: 'Rectangle',\n\n  propTypes: {\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    radius: PropTypes.number,\n    radiusTopLeft: PropTypes.number,\n    radiusTopRight: PropTypes.number,\n    radiusBottomRight: PropTypes.number,\n    radiusBottomLeft: PropTypes.number\n  },\n\n  render: function render() {\n    var width = this.props.width;\n    var height = this.props.height;\n    var radius = this.props.radius ? this.props.radius : 0;\n\n    // if unspecified, radius(Top|Bottom)(Left|Right) defaults to the radius\n    // property\n    var tl = this.props.radiusTopLeft ? this.props.radiusTopLeft : radius;\n    var tr = this.props.radiusTopRight ? this.props.radiusTopRight : radius;\n    var br = this.props.radiusBottomRight ? this.props.radiusBottomRight : radius;\n    var bl = this.props.radiusBottomLeft ? this.props.radiusBottomLeft : radius;\n\n    var path = Path();\n\n    // for negative width/height, offset the rectangle in the negative x/y\n    // direction. for negative radius, just default to 0.\n    if (width < 0) {\n      path.move(width, 0);\n      width = -width;\n    }\n    if (height < 0) {\n      path.move(0, height);\n      height = -height;\n    }\n    if (tl < 0) {\n      tl = 0;\n    }\n    if (tr < 0) {\n      tr = 0;\n    }\n    if (br < 0) {\n      br = 0;\n    }\n    if (bl < 0) {\n      bl = 0;\n    }\n\n    // disable border radius if it doesn't fit within the specified\n    // width/height\n    if (tl + tr > width) {\n      tl = 0;tr = 0;\n    }\n    if (bl + br > width) {\n      bl = 0;br = 0;\n    }\n    if (tl + bl > height) {\n      tl = 0;bl = 0;\n    }\n    if (tr + br > height) {\n      tr = 0;br = 0;\n    }\n\n    path.move(0, tl);\n\n    if (tl > 0) {\n      path.arc(tl, -tl);\n    }\n    path.line(width - (tr + tl), 0);\n\n    if (tr > 0) {\n      path.arc(tr, tr);\n    }\n    path.line(0, height - (tr + br));\n\n    if (br > 0) {\n      path.arc(-br, br);\n    }\n    path.line(-width + (br + bl), 0);\n\n    if (bl > 0) {\n      path.arc(-bl, -bl);\n    }\n    path.line(0, -height + (bl + tl));\n\n    return React.createElement(Shape, _extends({}, this.props, { d: path }));\n  }\n\n});\n\nmodule.exports = Rectangle;","/home/travis/build/npmtest/node-npmtest-react-art/node_modules/react-art/lib/Wedge.art.js":"'use strict';\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n/**\n * Copyright (c) 2013-present Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Wedge.art\n * @typechecks\n *\n * Example usage:\n * <Wedge\n *   outerRadius={50}\n *   startAngle={0}\n *   endAngle={360}\n *   fill=\"blue\"\n * />\n *\n * Additional optional property:\n *   (Int) innerRadius\n *\n */\n\nvar React = require('react');\nvar ReactART = require('./ReactART');\n\nvar PropTypes = React.PropTypes;\n\nvar Shape = ReactART.Shape;\nvar Path = ReactART.Path;\n\n/**\n * Wedge is a React component for drawing circles, wedges and arcs.  Like other\n * ReactART components, it must be used in a <Surface>.\n */\nvar Wedge = React.createClass({\n  displayName: 'Wedge',\n\n\n  propTypes: {\n    outerRadius: PropTypes.number.isRequired,\n    startAngle: PropTypes.number.isRequired,\n    endAngle: PropTypes.number.isRequired,\n    innerRadius: PropTypes.number\n  },\n\n  circleRadians: Math.PI * 2,\n\n  radiansPerDegree: Math.PI / 180,\n\n  /**\n   * _degreesToRadians(degrees)\n   *\n   * Helper function to convert degrees to radians\n   *\n   * @param {number} degrees\n   * @return {number}\n   */\n  _degreesToRadians: function _degreesToRadians(degrees) {\n    if (degrees !== 0 && degrees % 360 === 0) {\n      // 360, 720, etc.\n      return this.circleRadians;\n    } else {\n      return degrees * this.radiansPerDegree % this.circleRadians;\n    }\n  },\n\n  /**\n   * _createCirclePath(or, ir)\n   *\n   * Creates the ReactART Path for a complete circle.\n   *\n   * @param {number} or The outer radius of the circle\n   * @param {number} ir The inner radius, greater than zero for a ring\n   * @return {object}\n   */\n  _createCirclePath: function _createCirclePath(or, ir) {\n    var path = Path();\n\n    path.move(0, or).arc(or * 2, 0, or).arc(-or * 2, 0, or);\n\n    if (ir) {\n      path.move(or - ir, 0).counterArc(ir * 2, 0, ir).counterArc(-ir * 2, 0, ir);\n    }\n\n    path.close();\n\n    return path;\n  },\n\n  /**\n   * _createArcPath(sa, ea, ca, or, ir)\n   *\n   * Creates the ReactART Path for an arc or wedge.\n   *\n   * @param {number} startAngle The starting degrees relative to 12 o'clock\n   * @param {number} endAngle The ending degrees relative to 12 o'clock\n   * @param {number} or The outer radius in pixels\n   * @param {number} ir The inner radius in pixels, greater than zero for an arc\n   * @return {object}\n   */\n  _createArcPath: function _createArcPath(startAngle, endAngle, or, ir) {\n    var path = Path();\n\n    // angles in radians\n    var sa = this._degreesToRadians(startAngle);\n    var ea = this._degreesToRadians(endAngle);\n\n    // central arc angle in radians\n    var ca = sa > ea ? this.circleRadians - sa + ea : ea - sa;\n\n    // cached sine and cosine values\n    var ss = Math.sin(sa);\n    var es = Math.sin(ea);\n    var sc = Math.cos(sa);\n    var ec = Math.cos(ea);\n\n    // cached differences\n    var ds = es - ss;\n    var dc = ec - sc;\n    var dr = ir - or;\n\n    // if the angle is over pi radians (180 degrees)\n    // we will need to let the drawing method know.\n    var large = ca > Math.PI;\n\n    // TODO (sema) Please improve theses comments to make the math\n    // more understandable.\n    //\n    // Formula for a point on a circle at a specific angle with a center\n    // at (0, 0):\n    // x = radius * Math.sin(radians)\n    // y = radius * Math.cos(radians)\n    //\n    // For our starting point, we offset the formula using the outer\n    // radius because our origin is at (top, left).\n    // In typical web layout fashion, we are drawing in quadrant IV\n    // (a.k.a. Southeast) where x is positive and y is negative.\n    //\n    // The arguments for path.arc and path.counterArc used below are:\n    // (endX, endY, radiusX, radiusY, largeAngle)\n\n    path.move(or + or * ss, or - or * sc) // move to starting point\n    .arc(or * ds, or * -dc, or, or, large) // outer arc\n    .line(dr * es, dr * -ec); // width of arc or wedge\n\n    if (ir) {\n      path.counterArc(ir * -ds, ir * dc, ir, ir, large); // inner arc\n    }\n\n    return path;\n  },\n\n  render: function render() {\n    // angles are provided in degrees\n    var startAngle = this.props.startAngle;\n    var endAngle = this.props.endAngle;\n    if (startAngle - endAngle === 0) {\n      return;\n    }\n\n    // radii are provided in pixels\n    var innerRadius = this.props.innerRadius || 0;\n    var outerRadius = this.props.outerRadius;\n\n    // sorted radii\n    var ir = Math.min(innerRadius, outerRadius);\n    var or = Math.max(innerRadius, outerRadius);\n\n    var path;\n    if (endAngle >= startAngle + 360) {\n      path = this._createCirclePath(or, ir);\n    } else {\n      path = this._createArcPath(startAngle, endAngle, or, ir);\n    }\n\n    return React.createElement(Shape, _extends({}, this.props, { d: path }));\n  }\n\n});\n\nmodule.exports = Wedge;","/home/travis/build/npmtest/node-npmtest-react-art/node_modules/react-art/shapes/circle.js":"/**\n * Copyright (c) 2013-present Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\nmodule.exports = require('../lib/Circle.art');\n","/home/travis/build/npmtest/node-npmtest-react-art/node_modules/react-art/shapes/rectangle.js":"/**\n * Copyright (c) 2013-present Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\nmodule.exports = require('../lib/Rectangle.art');\n","/home/travis/build/npmtest/node-npmtest-react-art/node_modules/react-art/shapes/wedge.js":"/**\n * Copyright (c) 2013-present Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\nmodule.exports = require('../lib/Wedge.art');\n"}